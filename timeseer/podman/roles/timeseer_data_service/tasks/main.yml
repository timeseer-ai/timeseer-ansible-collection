- name: Prepare a storage directory for timeseer-data-service
  ansible.builtin.file:
    path: "{{ timeseer_data_service_dir }}"
    state: directory
    owner: 1001
    mode: "0755"

- name: Set storage path to podman volume
  ansible.builtin.set_fact:
    timeseer_data_service_storage_mount: "{{ timeseer_data_service_podman_volume }}"
  when: timeseer_data_service_podman_volume | default('') | trim != '' and timeseer_data_service_enable

- name: Set storage path to timeseer default storage_path
  ansible.builtin.set_fact:
    timeseer_data_service_storage_mount: "{{ timeseer_data_service_dir }}"
  when: timeseer_data_service_podman_volume | default('') | trim == '' and timeseer_data_service_enable

- name: Define timeseer-data-service volume list
  ansible.builtin.set_fact:
    data_service_volume_list: "{{ ds_base_volumes + (ds_custom_toml_volume if timeseer_data_service_config_dir | default('') | trim != '' else []) }}"
  vars:
    ds_base_volumes:
      - "{{ timeseer_data_service_storage_mount }}:/usr/src/app/data-service"
    ds_custom_toml_volume:
      - "{{ timeseer_data_service_config_dir }}:/usr/src/app/Timeseer-data-service.toml"

- name: Create ts-data-service quadlet container
  containers.podman.podman_container:
    name: timeseer-data-service
    image: "{{ timeseer_data_service_image }}"
    command: "/usr/bin/timeseer-data-service"
    state: quadlet
    pull: "{{ timeseer_data_service_image_pull }}"
    network: "{{ timeseer_data_service_network }}"
    volumes: "{{ data_service_volume_list }}"
    log_driver: journald
    log_options:
      tag: "{{ timeseer_data_service_journal_tag }}"
    env:
      RUST_LOG: info
    tty: true
    ports: "{{ timeseer_data_service_ports }}"
  when: timeseer_data_service_enable

- name: Template configuration files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/containers/systemd/ts-data-service-container.container"
    mode: "0644"
  loop:
    - "timeseer-data-service-container.quadlet.j2"
  register: timeseer_data_j2
  notify:
    - Signal daemon Restart for timeseer-data-service
    - Reload systemd daemon for timeseer-data-service

- name: Flush  timeseer-data-service Handlers to apply changes immediately
  ansible.builtin.meta: flush_handlers

- name: Enable timeseer-data-service-container service
  ansible.builtin.systemd:
    name: ts-data-service-container
    enabled: true

- name: Start timeseer-data-service-container service
  ansible.builtin.systemd:
    name: ts-data-service-container
    state: started
