- name: Prepare a storage directory for timeseer-data-service
  ansible.builtin.file:
    path: "{{ timeseer_data_service_dir }}"
    state: directory
    owner: 1001
    mode: "0755"

- name: Set storage path to podman volume
  ansible.builtin.set_fact:
    timeseer_data_service_storage_mount: "{{ timeseer_data_service_podman_volume }}"
  when: timeseer_data_service_podman_volume | default('') | trim != '' and timeseer_data_service_enable

- name: Set storage path to timeseer default storage_path
  ansible.builtin.set_fact:
    timeseer_data_service_storage_mount: "{{ timeseer_data_service_dir }}"
  when: timeseer_data_service_podman_volume | default('') | trim == '' and timeseer_data_service_enable

- name: Check for timeseer-data-service file state
  ansible.builtin.stat:
    path: /etc/containers/systemd/timeseer-data-service-container.container
  register: data_service_config_file

- name: Create ts-data-service quadlet container
  containers.podman.podman_container:
    name: timeseer-data-service
    image: "{{ timeseer_data_service_image }}"
    command: "/usr/bin/timeseer-data-service"
    state: quadlet
    pull: "{{ timeseer_data_service_image_pull }}"
    quadlet_filename: timeseer-data-service-container
    quadlet_options:
      - |
        [Service]
        Restart=always
        [Install]
        WantedBy=default.target
    network: "{{ timeseer_data_service_network }}"
    volumes: "{{ data_service_volume_list }}"
    log_driver: journald
    log_options:
      tag: "{{ timeseer_data_service_journal_tag }}"
      path: "/dev/null"
      max_size: "0"
    env:
      RUST_LOG: info
    tty: true
    ports: "{{ timeseer_data_service_ports }}"
  vars:
    volumes:
      - "{{ timeseer_data_service_storage_mount }}:/usr/src/app/data-service"
    toml_volume:
      - "{{ timeseer_data_service_config_dir }}:/usr/src/app/Timeseer-data-service.toml"
    volume_list: "{{ volumes + (toml_volume if timeseer_data_service_config_dir | default('') | trim != '' else []) }}"
  when: timeseer_data_service_enable
  notify:
    - Reload systemd daemon for timeseer-data-service-container service
    - Restart timeseer-data-service-container service

- name: Handle file not existing
  ansible.builtin.systemd:
    daemon_reload: true
  when: not data_service_config_file.stat.exists

- name: Enable timeseer-data-service-container service
  ansible.builtin.systemd:
    name: timeseer-data-service-container
    enabled: true

- name: Start timeseer-data-service-container service
  ansible.builtin.systemd:
    name: timeseer-data-service-container
    state: started
