- name: Prepare configuration directory
  ansible.builtin.file:
    path: "{{ timeseer_reverse_proxy_dir }}"
    state: directory
    mode: "0755"

- name: Create a file for environment variables
  ansible.builtin.file:
    path: "{{ timeseer_reverse_proxy_dir }}/env"
    state: touch
    mode: "0644"

- name: Set config_dir for Timeseer Reverse Proxy
  ansible.builtin.set_fact:
    config_dir: "{{ timeseer_reverse_proxy_config_dir | default(timeseer_reverse_proxy_dir) }}"

- name: Define timeseer-reverse-proxy volume list
  ansible.builtin.set_fact:
    reverse_proxy_volume_list: "{{ custom_toml_volume if timeseer_reverse_proxy_config_dir | default('') | trim != '' else [] }}"
  vars:
    config_dir: "{{ timeseer_reverse_proxy_config_dir | default(timeseer_reverse_proxy_dir) }}"
    selinux_suffix: "{{ ':z' if ansible_selinux['status'] == 'enabled' else '' }}"
    custom_toml_volume:
      - "{{ config_dir }}:/usr/src/app/proxy-config{{ selinux_suffix }}"

- name: Prepend 'systemd-' to network
  ansible.builtin.set_fact:
    timeseer_reverse_proxy_network: "systemd-{{ timeseer_reverse_proxy_network }}"

- name: Template configuration files
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/containers/systemd/timeseer-reverse-proxy.container"
    mode: "0644"
  loop:
    - "timeseer-reverse-proxy-container.quadlet"
  register: timeseer_reverse_proxy_container
  notify:
    - Restart timeseer-reverse-proxy service

- name: Reload systemd daemon to ensure timeseer-reverse-proxy container is known
  ansible.builtin.systemd:
    daemon_reload: true
  when: timeseer_reverse_proxy_container.changed # noqa: no-handler

- name: Check if timeseer data service is enabled
  ansible.builtin.systemd:
    name: timeseer-reverse-proxy
    enabled: true
    state: started
  register: timeseer_reverse_proxy_status
