- name: Fail when no Let's Encrypt mail has been configured
  ansible.builtin.fail:
    msg: 'variable "traefik_letsencrypt_mail" not set'
  when:
    - (traefik_letsencrypt_mail is not defined or traefik_letsencrypt_mail | trim == '')
    - traefik_tls == "acme"

- name: Prepare configuration directory
  ansible.builtin.file:
    path: "{{ traefik_dir }}"
    mode: "0755"
    state: directory

- name: Prepare directory for Let's Encrypt
  ansible.builtin.file:
    path: "{{ traefik_dir }}/acme"
    mode: "0755"
    state: directory

- name: Prepare directory for using own certs
  ansible.builtin.file:
    path: "{{ traefik_dir }}/certs"
    mode: "0755"
    state: directory

- name: Set ports configuration
  ansible.builtin.set_fact:
    ports_list:
      - "80:80"
      - "443:443"
      - "8443:8443"

- name: Define traefik_tls
  ansible.builtin.set_fact:
    acme_or_certs: "{{ 'acme' if traefik_tls == 'acme' else 'certs' }}"

- name: Define traefik volume list
  ansible.builtin.set_fact:
    traefik_volume_list:
      - "{{ traefik_dir }}/traefik.yml:/etc/traefik/traefik.yml"
      - "{{ traefik_dir }}/traefik-timeseer.yml:/etc/traefik/traefik-timeseer.yml"
      - "{{ traefik_dir }}/{{ acme_or_certs }}:/etc/traefik/{{ acme_or_certs }}{{ ':z' if ansible_selinux.status == 'enabled' else '' }}"

- name: Template configuration files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  loop:
    - src: "traefik.yml"
      dest: "{{ traefik_dir }}/traefik.yml"
    - src: "traefik-timeseer.yml"
      dest: "{{ traefik_dir }}/traefik-timeseer.yml"
    - src: "traefik-container.quadlet.j2"
      dest: "/etc/containers/systemd/ts-traefik-proxy-container.container"
  register: traefik_config
  notify:
    - Signal daemon Restart for traefik
    - Reload systemd daemon for traefik
    - Restart traefik service

- name: Run traefik  in a podman container
  containers.podman.podman_container:
    name: traefik
    image: "{{ traefik_image }}"
    state: quadlet
    network_mode: "{{ traefik_network }}"
    ports: "{{ ports_list }}"
    volumes: "{{ traefik_volume_list }}"
    log_driver: journald
    log_options:
      tag: "{{ traefik_journal_tag }}"
    tty: true

- name: Flush traefik Handlers to apply changes immediately
  ansible.builtin.meta: flush_handlers

- name: Enable timeseer-reverse-proxy-container service
  ansible.builtin.systemd:
    name: ts-traefik-proxy-container
    enabled: true

- name: Start timeseer-reverse-proxy-container service
  ansible.builtin.systemd:
    name: ts-traefik-proxy-container
    state: started
